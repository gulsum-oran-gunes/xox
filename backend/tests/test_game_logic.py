import pytest
from app.game_logic import GameLogic



@pytest.mark.parametrize("board, symbol, expected_result", [
     # --- Horizontal win ---
    ({1: "X", 2: "X", 3: "X", 4: " ", 5: " ", 6: " ", 7: " ", 8: " ", 9: " "}, "X", True),
    ({1: " ", 2: " ", 3: " ", 4: "X", 5: "X", 6: "X", 7: " ", 8: " ", 9: " "}, "X", True),
    ({1: " ", 2: " ", 3: " ", 4: " ", 5: " ", 6: " ", 7: "X", 8: "X", 9: "X"}, "X", True),
    ({1: "O", 2: "O", 3: "O", 4: " ", 5: " ", 6: " ", 7: " ", 8: " ", 9: " "}, "O", True),
    ({1: " ", 2: " ", 3: " ", 4: "O", 5: "O", 6: "O", 7: " ", 8: " ", 9: " "}, "O", True),
    ({1: " ", 2: " ", 3: " ", 4: " ", 5: " ", 6: " ", 7: "O", 8: "O", 9: "O"}, "O", True),

    # --- Vertical win ---
    ({1: "X", 2: " ", 3: " ", 4: "X", 5: " ", 6: " ", 7: "X", 8: " ", 9: " "}, "X", True),
    ({1: " ", 2: "X", 3: " ", 4: " ", 5: "X", 6: " ", 7: " ", 8: "X", 9: " "}, "X", True),
    ({1: " ", 2: " ", 3: "X", 4: " ", 5: " ", 6: "X", 7: " ", 8: " ", 9: "X"}, "X", True),
    ({1: "O", 2: " ", 3: " ", 4: "O", 5: " ", 6: " ", 7: "O", 8: " ", 9: " "}, "O", True),
    ({1: " ", 2: "O", 3: " ", 4: " ", 5: "O", 6: " ", 7: " ", 8: "O", 9: " "}, "O", True),
    ({1: " ", 2: " ", 3: "O", 4: " ", 5: " ", 6: "O", 7: " ", 8: " ", 9: "O"}, "O", True),

    # --- Diagonal win ---
    ({1: "X", 2: " ", 3: " ", 4: " ", 5: "X", 6: " ", 7: " ", 8: " ", 9: "X"}, "X", True),
    ({1: " ", 2: " ", 3: "X", 4: " ", 5: "X", 6: " ", 7: "X", 8: " ", 9: " "}, "X", True),
    ({1: "O", 2: " ", 3: " ", 4: " ", 5: "O", 6: " ", 7: " ", 8: " ", 9: "O"}, "O", True),
    ({1: " ", 2: " ", 3: "O", 4: " ", 5: "O", 6: " ", 7: "O", 8: " ", 9: " "}, "O", True),

     # --- No Winner---
    ({1: "X", 2: "O", 3: "X", 4: "X", 5: "X", 6: "O", 7: "O", 8: "X", 9: "O"}, "X", False),
    ({1: "X", 2: "O", 3: "X", 4: "O", 5: "X", 6: "O", 7: "X", 8: "X", 9: "O"}, "O", False),

     # --- some lose case---
    ({1: "X", 2: " ", 3: " ", 4: " ", 5: "X", 6: " ", 7: " ", 8: " ", 9: "X"}, "O", False),
    ({1: "O", 2: "O", 3: "O", 4: " ", 5: " ", 6: " ", 7: " ", 8: " ", 9: " "}, "X", False),

])
def test_winning(board, symbol, expected_result):
    """Oyuncunun kazan√ß durumunu test et."""
    game = GameLogic(symbol, board)
    result = game.winning(symbol)
    assert result == expected_result  # checking for expecting result 
